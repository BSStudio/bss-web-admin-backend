services:
  app:
    build:
      context: "./"
    ports:
      - "127.0.0.1:8080:8080"
    healthcheck:
      test: "wget --tries=1 --no-verbose -qO- http://localhost:8080/actuator/health | grep -q UP"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    profiles:
      - app
    depends_on:
      - postgres
    environment:
      bss.file-api.url: "http://mock-file-api:8080"
      spring.security.oauth2.resourceserver.opaquetoken.introspection-uri: "http://mock-oidc:8080/o/introspect"
      spring.security.oauth2.resourceserver.opaquetoken.client-id: client-id
      spring.security.oauth2.resourceserver.opaquetoken.client-secret: client-secret
      spring.datasource.url: "jdbc:postgresql://postgres:5432/bss?currentSchema=private"
      spring.datasource.username: "user"
      spring.datasource.password: "password"
      spring.flyway.default-schema: "private"
      spring.flyway.schemas: "private,public"
      management.endpoints.web.exposure.include: "prometheus,health"

  postgres:
    # update server/data/src/test/resources/application.yml
    image: "postgres:16.3-alpine3.18@sha256:64e18e8fb3e9c9aac89ac590c5dd8306b862478404f76cd9b5f7720d012b4c47"
    environment:
      POSTGRES_DB: "bss"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: "pg_isready -q -U postgres"
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3
  mock-file-api:
    image: "wiremock/wiremock:3.13.1@sha256:d61e7720f89483fdef5366843b58d1dfd06bcce5828179c9f2f54de5c28354b0"
    ports:
      - "127.0.0.1:8888:8080"
    healthcheck:
      test: "curl -fs http://localhost:8080/__admin/docs > /dev/null || exit 1"
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - "./docker/wiremock/stubs/file-api:/home/wiremock/mappings/file-api"
  mock-oidc:
    image: "wiremock/wiremock:3.13.1@sha256:d61e7720f89483fdef5366843b58d1dfd06bcce5828179c9f2f54de5c28354b0"
    ports:
      - "127.0.0.1:8998:8080"
    healthcheck:
      test: "curl -fs http://localhost:8080/__admin/docs > /dev/null || exit 1"
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - "./docker/wiremock/stubs/oidc:/home/wiremock/mappings/oidc"

  prometheus:
    image: "prom/prometheus:v3.7.1@sha256:ff7e389acbe064a4823212a500393d40a28a8f362e4b05cbf6742a9a3ef736b2"
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - "./docker/prometheus.yml:/etc/prometheus/prometheus.yml"
    profiles:
      - metrics
    healthcheck:
      test: wget --tries=1 --no-verbose -qO- http://localhost:9090/-/ready | grep -q "Prometheus Server is Ready."
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3
  grafana:
    image: "grafana/grafana:12.2.0-ubuntu@sha256:b20a76f929a2b0fade8f6546f688aabea09a77a536c69d4e8425a42ddc5e5b41"
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - "./docker/grafana:/var/lib/grafana"
    profiles:
      - metrics
    depends_on:
      - prometheus
    healthcheck:
      test: curl -fs http://localhost:3000/api/health | grep -q "\"ok\""
