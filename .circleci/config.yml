version: 2.1
orbs:
  codecov: codecov/codecov@5.2.0
  gradle: circleci/gradle@3.0.0
  docker: circleci/docker@2.8.2
  github-cli: circleci/github-cli@2.7.0
executors:
  jdk:
    docker:
      - image: cimg/openjdk:21.0.6
  jdk-machine:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
defaults:
  gradle: &gradle
    deps_checksum_file: build.gradle.kts
    cache_key: v2
    executor: jdk
  docker_publish: &docker_publish
    image: bsstudio/bss-web-admin-backend
    registry: ghcr.io
    executor: docker/docker
    remote-docker-version: default
    use-remote-docker: true
    remote-docker-dlc: true
    use-buildkit: true
  tag_only: &tag_only
    context:
      - BSS Github deploy
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /.*/
jobs:
  gradle_docker:
    parameters:
      command:
        type: string
      after:
        type: steps
        default: []
    executor: jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: default
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          cache_key: v2
          steps:
            - run: ./gradlew << parameters.command >>
      - steps: << parameters.after >>
  gradle_integration:
    executor: jdk-machine
    steps:
      - checkout
      - run: docker compose up -d --build
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          cache_key: v2
          steps:
            - run: ./gradlew integrationTest --continue
      - gradle/collect_test_results:
          reports_path: integration/build/reports
          test_results_path: integration/build/test-results
      - run: docker compose down
  github_release:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - github-cli/install:
          version: 2.43.1
      - github-cli/setup:
          version: 2.43.1
      - run: gh release create << pipeline.git.tag >> -t << pipeline.git.tag >> --generate-notes
workflows:
  Build app:
    jobs:
      - gradle/run:
          name: Lint
          command: spotlessCheck
          <<: *gradle
      - gradle/run:
          name: Build boot jar
          command: bootJar
          <<: *gradle
      - gradle_integration:
          name: Integration test
      - gradle_docker:
          name: Coverage verification
          command: jacocoTestCoverageVerification
          after:
            - codecov/upload:
                flags: unit
      - gradle_docker:
          name: Unit test
          command: test --continue
          after:
            - run:
                name: Save test results
                command: |
                  mkdir -p test-results/junit/
                  find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} test-results/junit/ \;
            - gradle/collect_test_results:
                reports_path: server/build/reports
                test_results_path: test-results
      - docker/hadolint:
          name: Lint Dockerfile
      - docker/publish:
          name: Build docker image
          <<: *docker_publish
          deploy: false
  Release:
    jobs:
      - docker/publish:
          name: Publish image
          <<: [*docker_publish, *tag_only]
          tag: latest,<< pipeline.git.tag >>
      - github_release:
          name: Create release
          <<: *tag_only
