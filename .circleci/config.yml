version: 2.1
orbs: 
  codecov: codecov/codecov@3.2.5
  node: circleci/node@5.1.0
  gradle: circleci/gradle@3.0.0
  docker: circleci/docker@2.2.0
executors:
  jdk:
    docker:
      - image: cimg/openjdk:17.0.8
  node:
    machine:
      image: ubuntu-2204:2022.10.2
jobs:
  integration_test:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          app-dir: ~/project/integration
      - run:
          command: npm run test:ci -- --testTimeout << parameters.timeout >>
          working_directory: ~/project/integration
          environment:
            DOCKER_COMPOSE_FILE_NAME: << parameters.compose_files >>
      - store_test_results:
          path: ~/project/integration/junit.xml
    parameters:
      timeout:
        type: integer
        default: 5000
      compose_files:
        type: string
        default: docker-compose.yml,docker-compose.ci.yml
  gradle_test:
    executor: jdk
    steps:
      - checkout
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          steps:
            - run: ./gradlew test --parallel
      - gradle/collect_test_results:
          reports_path: server/build/reports/jacoco
          test_results_path: server/build/reports/tests
      - codecov/upload
  fork_join:
    docker:
      - image: alpine:latest
    steps:
      - run: echo "Fork!"
workflows:
  Build app:
    jobs:
      - gradle/run:
          name: Lint
          command: ktlintCheck --parallel
          deps_checksum_file: build.gradle.kts
          executor: jdk
      - gradle/run:
          name: Coverage verification
          command: jacocoTestCoverageVerification --parallel
          deps_checksum_file: build.gradle.kts
          executor: jdk
      - gradle/run:
          name: Build boot jar
          command: bootJar --parallel
          deps_checksum_file: build.gradle.kts
          executor: jdk
      - gradle/run:
          name: Build boot war
          command: bootWar --parallel
          deps_checksum_file: build.gradle.kts
          executor: jdk
      - node/run:
          name: Lint integration test
          app-dir: ~/project/integration
          npm-run: lint
          version: 18.12.1
      - gradle_test:
          name: Unit test
      - integration_test:
          name: "Integration test: jar"
      - integration_test:
          name: "Integration test: war"
          timeout: 20000
          compose_files: "docker-compose.yml,docker-compose.war.yml,docker-compose.ci.yml"
      - docker/hadolint:
          name: Lint Dockerfiles
          dockerfiles: Dockerfile:war.Dockerfile
      - docker/publish:
          name: "Build image: jar"
          deploy: false
          image: bsstudio/bss-web-admin-backend
          registry: ghcr.io
          tag: latest
          use-buildkit: true
          use-docker-credentials-store: true
      - docker/publish:
          name: "Build image: war"
          deploy: false
          dockerfile: war.Dockerfile
          image: bsstudio/bss-web-admin-backend
          registry: ghcr.io
          tag: war
          use-buildkit: true
          use-docker-credentials-store: true
      - fork_join:
          name: Fork join build
          requires:
            - Lint
            - Coverage
            - Build boot jar
            - Build boot war
            - Lint integration test
            - Unit test
            - "Integration test: jar"
            - "Integration test: war"
            - "Build image: jar"
            - "Build image: war"
            - Lint Dockerfiles
      - docker/publish:
          name: "Publish image: jar"
          deploy: true
          image: bsstudio/bss-web-admin-backend
          registry: ghcr.io
          tag: latest
          use-buildkit: true
          use-docker-credentials-store: true
          requires:
            - Fork join build
          filters:
            branches:
              only: main
      - docker/publish:
          name: "Publish image: war"
          deploy: true
          dockerfile: war.Dockerfile
          image: bsstudio/bss-web-admin-backend
          registry: ghcr.io
          tag: war
          use-buildkit: true
          use-docker-credentials-store: true
          requires:
            - Fork join build
          filters:
            branches:
              only: main
