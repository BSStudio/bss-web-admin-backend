# $schema: https://www.schemastore.org/circleciconfig.json
version: 2.1
orbs:
  codecov: codecov/codecov@5.4.3
  gradle: circleci/gradle@3.0.0
executors:
  jdk:
    docker:
      - image: cimg/openjdk:25.0
  jdk-machine:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
defaults:
  gradle: &gradle
    deps_checksum_file: build.gradle.kts
    cache_key: v2
    executor: jdk
jobs:
  gradle_docker:
    parameters:
      command:
        type: string
      after:
        type: steps
        default: []
    executor: jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: default
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          cache_key: v2
          steps:
            - run: ./gradlew << parameters.command >>
      - steps: << parameters.after >>
  gradle_integration:
    executor: jdk-machine
    steps:
      - checkout
      - run: docker compose --profile app up --wait --build
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          cache_key: v2
          steps:
            - run: ./gradlew integrationTest --continue
      - gradle/collect_test_results:
          reports_path: integration/build/reports
          test_results_path: integration/build/test-results
      - run: docker compose down
  github_release:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - github-cli/install:
          version: 2.76.0
      - github-cli/setup:
          version: 2.76.0
      - run: gh release create << pipeline.git.tag >> -t << pipeline.git.tag >> --generate-notes
workflows:
  Build app:
    jobs:
      - gradle/run:
          name: Lint
          command: spotlessCheck
          <<: *gradle
      - gradle/run:
          name: Build boot jar
          command: bootJar
          <<: *gradle
      - gradle_integration:
          name: Integration test
      - gradle_docker:
          name: Coverage verification
          command: jacocoTestCoverageVerification
          after:
            - codecov/upload:
                flags: unit
      - gradle_docker:
          name: Unit test
          command: test --continue
          after:
            - run:
                name: Save test results
                command: |
                  mkdir -p test-results/junit/
                  find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} test-results/junit/ \;
            - gradle/collect_test_results:
                reports_path: server/build/reports
                test_results_path: test-results
