version: 2.1
commands:
  save_gradle_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  load_gradle_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  download_gradle_dependencies:
    steps:
      - run: ./gradlew
  store_gradle_reports:
    steps:
      - store_artifacts:
          path: app/build/reports
      - store_artifacts:
          path: web/build/reports
      - store_artifacts:
          path: service/build/reports
      - store_artifacts:
          path: data/build/reports
  save_npm_cache:
    steps:
      - save_cache:
          paths:
            - integration/node_modules
          key: v1-npm-deps-{{ checksum "integration/package-lock.json" }}
  load_npm_cache:
    steps:
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "integration/package-lock.json" }}
executors:
  jdk:
    docker:
      - image: cimg/openjdk:17.0
  node:
    docker:
      - image: cimg/node:16.15
jobs:
  lint:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - load_gradle_cache
      - run: ./gradlew
      - save_gradle_cache
      - run: ./gradlew ktlintCheck --parallel
  test:
    executor: jdk
    steps:
      - checkout
      - load_gradle_cache
      - download_gradle_dependencies
      - save_gradle_cache
      - run: 
          name: Run test and test report
          command: ./gradlew jacocoTestReport --parallel
      - store_test_results:
          path: web/build/test-results
      - store_test_results:
          path: service/build/test-results
      - store_gradle_reports
  coverage:
    executor: jdk
    steps:
      - checkout
      - load_gradle_cache
      - download_gradle_dependencies
      - save_gradle_cache
      - run:
          name: "Run test and test coverage"
          command: ./gradlew jacocoTestCoverageVerification --parallel
      - store_gradle_reports
  docker-build:
    working_directory: ~/project
    machine:
      image: ubuntu-2204:2022.04.1
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Build application Docker image
          command: |
            docker build .
  lint-integration-test:
    executor: node
    steps:
      - checkout
      - load_npm_cache
      - run:
          command: npm install --no-fund --no-audit
          working_directory: integration
      - save_npm_cache
      - run:
          name: Write lint report for integration test
          command: npm run lint -- -f=junit -o ./out/eslint/report.xml
          working_directory: integration
      - run:
          name: Lint integration test
          command: npm run lint
          working_directory: integration
      - store_test_results:
          path: integration/out/eslint
  integration-test:
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - checkout
      - load_npm_cache
      - run:
          command: npm install --no-fund --no-audit
          working_directory: integration
      - save_npm_cache
      - run:
          name: Run integration test
          command: npm run test:ci -- --ci
          working_directory: integration
          environment:
            DEBUG: testcontainers*
      - store_test_results:
          path: integration/out/jest
workflows:
  version: 2
  all:
    jobs:
      - lint
      - test
      - coverage
      - docker-build
      - integration-test
      - lint-integration-test
