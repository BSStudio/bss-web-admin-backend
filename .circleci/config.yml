version: 2.1
jobs:
  lint:
    docker:
      - image: cimg/openjdk:11.0.13
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew ktlintCheck --parallel
  test:
    docker:
      - image: cimg/openjdk:11.0.13
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew jacocoTestReport --parallel
      - store_test_results:
          path: web/build/test-results
      - store_test_results:
          path: service/build/test-results
      - store_artifacts:
          path: app/build/reports
      - store_artifacts:
          path: web/build/reports
      - store_artifacts:
          path: service/build/reports
      - store_artifacts:
          path: data/build/reports
  coverage:
    docker:
      - image: cimg/openjdk:11.0.13
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew jacocoTestCoverageVerification --parallel
  docker-build:
    working_directory: ~/project
    docker:
      - image: docker:20.10.12-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
  integration-test:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "integration/package-lock.json" }}
      - run:
          command: npm install --no-fund --no-audit
          working_directory: integration
      - save_cache:
          paths:
            - integration/node_modules
          key: v1-npm-deps-{{ checksum "integration/package-lock.json" }}
      - run:
          command: npm run test:ci -- --ci
          working_directory: integration
          environment:
            DEBUG: testcontainers
      - store_test_results:
          path: integration/out
workflows:
  version: 2
  all:
    jobs:
      - lint
      - test
      - coverage
      - docker-build
      - integration-test
