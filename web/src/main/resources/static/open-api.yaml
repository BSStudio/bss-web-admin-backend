openapi: 3.0.0
info:
  title: BSS Web admin API
  version: 1.0.0
  contact:
    name: Bence Csik
    url: https://github.com/csikb
tags:
  - name: Member
    description: "REST operations for members"
  - name: Video
    description: "REST operations for videos"
  - name: VideoCrew
    description: "REST operations for video crews"
  - name: Event
    description: "REST operations for events"
  - name: EventVideo
    description: "REST operations for event videos"
paths:
  /api/member:
    get:
      summary: "Read all member"
      description: "Read all member"
      tags:
        - Member
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    post:
      summary: "Create member"
      description: "Create member"
      tags:
        - Member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMember'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
  /api/member/{memberId}:
    put:
      summary: "Update member"
      description: "Update member"
      tags:
        - Member
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMember'
      responses:
        200:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    get:
      summary: "Read one member"
      description: "Read one member"
      tags:
        - Member
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    delete:
      summary: "Delete member"
      description: "Delete member"
      tags:
        - Member
      parameters:
        - name: memberId
          in: path
          required: true
          explode: false
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: string
  /api/video:
    get:
      summary: "Read all video (paginated)"
      description: "Read all video (paginated)"
      tags:
        - Video
      parameters:
        - name: size
          in: query
          required: true
          schema:
            type: integer
            default: 50
        - name: page
          in: query
          required: true
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
    post:
      summary: "Create video"
      description: "Create video"
      tags:
        - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideo'
      responses:
        201:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
  /api/video/archive:
    put:
      summary: "Archive videos"
      description: "Archive videos"
      tags:
        - Video
      parameters:
        - name: videoIds
          in: query
          required: true
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: unarchive
          in: query
          description: Defaults to false if no value was provided
          schema:
            type: boolean
            nullable: false
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/video/visible:
    put:
      summary: "Change video visibility"
      description: "Change video visibility"
      tags:
        - Video
      parameters:
        - name: videoIds
          in: query
          required: true
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: visible
          description: Defaults to false if no value was provided
          in: query
          schema:
            type: boolean
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/video/{videoId}:
    put:
      summary: "Update video"
      description: "Update video"
      tags:
        - Video
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVideo'
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVideo'
    get:
      summary: "Read one video"
      description: "Read one video"
      tags:
        - Video
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVideo'
    delete:
      summary: "Delete video"
      description: "Delete video"
      tags:
        - Video
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/videocrew/{videoId}:
    put:
      summary: "Add position with member to the video"
      description: "Add position with member to the video"
      tags:
        - VideoCrew
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
  /api/videocrew/{videoId}/{position}/{memberId}:
    delete:
      summary: "Delete position with member to the video"
      description: "Delete position with member to the video"
      tags:
        - VideoCrew
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: position
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
  /api/event:
    get:
      summary: "Read all event"
      description: "Read all event"
      tags:
        - Event
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
    post:
      summary: "Create event"
      description: "Create event"
      tags:
        - Event
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                type: object
  /api/event/archive:
    put:
      summary: "Archive event"
      description: "Archive event"
      tags:
        - Event
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                type: object
  /api/event/{eventId}:
    get:
      summary: "Read one event"
      description: "Read one event"
      tags:
        - Event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
    put:
      summary: "Update event"
      description: "Update event"
      tags:
        - Event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: "Delete event"
      description: "Delete event"
      tags:
        - Event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
  /api/eventVideo:
    put:
      summary: "Add video to event"
      description: "Add video to event"
      tags:
        - EventVideo
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
  /api/eventVideo/{eventId}/{videoId}:
    delete:
      summary: "Delete video from event"
      description: "Delete video from event"
      tags:
        - EventVideo
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: videoId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Status:
      type: string
      nullable: false
      enum:
        - ALUMNI
        - ACTIVE_ALUMNI
        - MEMBER
        - MEMBER_CANDIDATE
        - MEMBER_CANDIDATE_CANDIDATE
    CreateMember:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
    UpdateMember:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        imageUrl:
          type: string
        joinedAt:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/Status'
        archived:
          type: string
          nullable: true
    Member:
      type: object
      properties:
        id:
          type: string
          nullable: false
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        imageUrl:
          type: string
        joinedAt:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/Status'
        archived:
          type: string
          nullable: true
    CreateVideo:
      type: object
      properties:
        id:
          type: string
          nullable: false
        title:
          type: string
          nullable: false
    UpdateVideo:
      type: object
      properties:
        title:
          type: string
          nullable: false
        description:
          type: string
          nullable: false
        videoUrl:
          type: string
          nullable: true
        thumbnailUrl:
          type: string
          nullable: true
        uploadedAt:
          type: string
          format: date
          nullable: false
        visible:
          type: boolean
          nullable: false
        archived:
          type: boolean
          nullable: false
    Video:
      type: object
      properties:
        id:
          type: string
          nullable: false
        title:
          type: string
          nullable: false
        uploadedAt:
          type: string
          format: date
          nullable: false
        visible:
          type: boolean
          nullable: false
        archived:
          type: boolean
          nullable: false
    DetailedVideo:
      allOf:
        - $ref: '#/components/schemas/Video'
        - type: object
          properties:
            description:
              type: string
              nullable: false
            videoUrl:
              type: string
              nullable: true
            thumbnailUrl:
              type: string
              nullable: true
